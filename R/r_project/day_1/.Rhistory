a <- 1
1 -> c
var1 <- c(1, 2, 5, 7, 8)
var2 <- c(1:5)
var3 <- seq(1:5)
var4 <- c(1.1, 2, 5, 7, 8)
var3 <- seq(1, 5)
var5 <- seq(1, 10, by = 2)
var3 <- seq(1, 5)
var5 <- seq(1, 10, by = 2.1)
var4
var4 +2
var4 * 2
var3 * var4
var3 / var4
var6 <- c("toy", 2, 3)
str1 <- c("toy", 2, 3)
str2 <- c("toy", "story")
str1
str2 * 2
str1 * 2
mean(var1)
max(var1)
paste(str2, collapse=" ")
min(var1)
str2
paste(str2)
paste(str2, collapse=" ")
str3 <- paste(str2, collapse=" ")
install.packages("ggplot2")
str4 <- c(1,2 "toy")
library(ggplot2)
gplot(x)
qplot(x)
x <- c("a", "a", "b", "c")
qplot(x)
qplot(data = mpg, x = hwy)
qplot(data = mpg, x = hwy, bins= 50)
qplot(data = mpg, x = hwy, bins= 10)
qplot(data = mpg, x = hwy, bins= 40)
qplot(data = mpg, x = cty)
qplot(data = mpg, x = drv, y = hwy)
qplot(data = mpg, x = drv, y = hwy, genom = 'line')
qplot(data = mpg, x = drv, y = hwy, geom = 'line')
qplot(data = mpg, x = drv, y = hwy, geom = 'boxplot')
qplot(data = mpg, x = drv, y = hwy, geom = 'boxplot', colour = drv)
df_midterm <- data.frame(english, math)
english <- c(90, 80, 60, 70)
math <- c(50, 60, 100,20)
df_midterm <- data.frame(english, math)
View(df_midterm)
df_midterm
class <- c(1, 1, 2, 2)
df_midterm <- data.frame(english, math, class)
df_midterm
View(df_midterm)
View(df_midterm)
mean(df_midterm$english)
max(df_midterm$math)
df_midterm2 <- data.frame(english = c(90, 80, 60, 70),
math = c(50, 60, 100,20),
class = c(1, 1, 2, 2))
df_midterm2
install.packages("readxl")
library(readxl)
df_exam <- read_excel("data/excel_exam.xlsx")
df_exam <- read_excel(".../data/excel_exam.xlsx")
df_exam <- read_excel("C:/r_project/data/excel_exam.xlsx")
df_exam
# 데이터프레임을 CSV로 저장하기
write.csv(df_midterm, file = "df_midterm.csv")
df_midterm.csv
df_exam
View(df_exam)
rm(df_dxam)
rm(df_exam)
df_exam
# Error: object 'df_exam' not found
rm(list())
# Error: object 'df_exam' not found
rm(list
# Error: object 'df_exam' not found
rm(list)
# Error: object 'df_exam' not found
rm(ls())
# Error: object 'df_exam' not found
rm(ls
# Error: object 'df_exam' not found
rm(ls)
# Error: object 'df_exam' not found
ls.rm()
df_exam <- read_excel("C:/r_project/data/excel_exam.xlsx")
head(df_exam)
tail(df_exam)
view(df_exam)
View(df_exam)
dim(df_exam)
str(df_exam)
summary(df_exam)
df_exam1 <- read_excel("../data/excel_exam.xlsx")
# ggplot2의 mpg 데이터를 바로 데이터 프레임으로 생성
mpg <- as.data.frame(ggplot2::mpg)
mpg
str(mpg)
>mpg
?mpg
summary(mpg)
install.packages("dplyr")
library(dplyr)
df_raw <- data.frame(var1 = c(1,1,2),
var2=c(2,3,2))
# 데이터 복사하기
df_new <- df_raw
df_new <- rename(da_new, v2 = var2)
df_new
df_new <- rename(da_new, v2 = var2)
df_new <- rename(df_new, v2 = var2)
df_new
df <- data.frame(var1 = c(4, 3, 8), var2 = c(2, 6, 1) )
df <- data.frame(var1 = c(4, 3, 8), var2 = c(2, 6, 1) )
df
df$sum <- df$var1 + df$var2
df
df$mean <- (df$var1 + df$var2)/2
df
summary(mpg$total)
# 통합연비(cty/hwy) 변수 추가
mpg$total <- (mpg&cty + mpg$hwy)/2
mpg
# 통합연비(cty/hwy) 변수 추가
mpg$total <- (mpg&cty + mpg$hwy)/2
mpg
# 통합연비(cty/hwy) 변수 추가
mpg$total <- (mpg$cty + mpg$hwy)/2
mpg
# 통합연비에 대한 분포 시각화 작업 ㅣ hist()
hist()
# 통합연비에 대한 분포 시각화 작업 ㅣ hist()
hist(data=mpg, x=total)
# 통합연비에 대한 분포 시각화 작업 ㅣ hist()
hist(x=mpg$total)
mpg$test <- ifelse(mpg$total >= 20, "pass", "fail")
summary(mpg$test)
mpg$test
# mpg$test : 값 데이터에 대한 빈도수를 표 형태로 출력
table(mpg$test)
# mpg$test <- ifelse(조건, 참일 경우, 거짓일 경우)
mpg$test <- ifelse(mpg$total >= 20, "pass", "fail")
mpg$grade <- ifelse(mpg$total >= 30, "A",
ifelse(mpg$total >= 20, "B", "C"))
mpg
table(mpg$grade)
hist(mpg$grade)
qplot(mpg$grade)
exam <- read_excel("C:/r_project/data/excel_exam.xlsx")
exam
exam %>% filter(class ==1)
a <- c(10, 15) %>% mean(a) %>% table(b)
a <- c(10, 15) %>% mean() %>% table()
a
exam %>% filter(class == 1 & mate >= 50)
exam %>% filter(class == 1 & math >= 50)
exam %>% filter(class != 1 & math >= 50)
exam %>% filter(class %in% c(1,3,5))
exam %>% select(math, class)
exam %>% select(-math)
result <- exam %>% filter(class==1) %>% select(math)
result
exam %>% arrange(math, class)
e < exam %>% mutate(total = math + english + science) %>% head
e <- exam %>% mutate(total = math + english + science) %>% head
e
e <- exam %>% mutate(total = math + english + science)
e
e <- exam %>% mutate(total = math + english + science,
mean = (math + english + science)/3)
e
exam %>% mutate(test = ifelse(science >= 90, "PASS", "FAIL"))
e %>% mutate(test = ifelse(mean >= 60, "PASS", "FAIL"))
e %>% mutate(test = ifelse(mean >= 70, "PASS", "FAIL"))
e %>% mutate(test = ifelse(mean >= 70, "PASS", "FAIL")) %>% arrange(test)
exam %>% summarise(mean_math = mean(math))
exam %>% summarise(mean_math = mean(math))
exam %>% group_by(class) %>% summarise(mean_math = mean(math))
exam %>% group_by(class) %>% summarise(mean_math = mean(math),
sum_math = sum(math),
median_math = median(math))
exam %>% group_by(class) %>% summarise(mean_math = mean(math),
sum_math = sum(math),
median_math = median(math),
n = n())
